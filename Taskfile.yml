version: '3'

vars:
  git_root:
    sh: git rev-parse --show-toplevel
  
  node_version: "23"
  terraform: 1.8.5

tasks:
  default:
    desc: Default task.
    cmds:
      - echo "Please enter a task or use '-l' or '--list-all' to list all available tasks"
    silent: true

# ================================================#
# ---------------------INTERNAL-------------------#
# ================================================#

  _docker/run:
    desc: Internal task to run secure container.
    internal: true
    dir: "{{.git_root}}"
    cmd: |
      docker run --rm \
        --cap-drop=ALL \
        --security-opt no-new-privileges \
        --user $(id -u):$(id -g) \
        --workdir /workspace \
        {{if .ENVS}}{{range $env := .ENVS}}--env {{$env}} {{end}}{{end}}\
        --volume "{{.git_root}}/{{.MOUNT_DIR}}:/workspace:rw" \
        {{.IMAGE}} \
        {{.CMD}}
    silent: true
    requires:
      vars: [IMAGE, CMD, MOUNT_DIR]

# ================================================#
# ----------------------PUBLIC--------------------#
# ================================================#

  terraform/fmt/fix:
    desc: Run 'terraform fmt'.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "hashicorp/terraform:{{.terraform}}"
          CMD: "fmt -recursive -diff -write=true"
          MOUNT_DIR: "terraform"
    silent: true

  node/lint/fix:
    desc: Run ESLint with fix flag.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm ci && npx eslint . --fix'"
          MOUNT_DIR: "site"
          ENVS: 
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true

  node/format/fix:
    desc: Run Prettier.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm ci && npx prettier --write src/'"
          MOUNT_DIR: "site"
          ENVS:
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true

# ================================================#
# ----------------------CI/CD---------------------#
# ================================================#

  node/lint:
    desc: Run ESLint.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm ci && npx eslint .'"
          MOUNT_DIR: "site"
          ENVS: 
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true

  node/format:
    desc: Run Prettier.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm ci && npx prettier --check src/'"
          MOUNT_DIR: "site"
          ENVS:
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true

  terraform/fmt:
    desc: Check 'terraform fmt' compliance (fails if not formatted).
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "hashicorp/terraform:{{.terraform}}"
          CMD: "fmt -check -recursive -diff"
          MOUNT_DIR: "terraform"
    silent: true

  node/audit:
    desc: Run dependencies audit.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm ci && npm audit --audit-level high'"
          MOUNT_DIR: "site"
          ENVS: 
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true

  node/type-check:
    desc: TypeScript type checking.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm ci && npm run type-check'"
          MOUNT_DIR: "site"
          ENVS:
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true

  node/build:
    desc: Build production version.
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "node:{{.node_version}}"
          CMD: "sh -c 'npm install && npm run build'"
          MOUNT_DIR: "site"
          ENVS:
            - "NPM_CONFIG_CACHE=/workspace/.cache"
            - "NPM_CONFIG_UPDATE_NOTIFIER=false"
    silent: true
